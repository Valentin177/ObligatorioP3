// <auto-generated />
using System;
using LogicaAccesoDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(PlataformaContext))]
    [Migration("20231017040627_decimosept")]
    partial class decimosept
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogicaNegocio.Dominio.Amenaza", b =>
                {
                    b.Property<int>("idAmenaza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idAmenaza"));

                    b.Property<int?>("Amenazas")
                        .HasColumnType("int");

                    b.Property<int?>("EspecieidEspecie")
                        .HasColumnType("int");

                    b.Property<string>("NombreAmenaza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gradoPeligrosidad")
                        .HasColumnType("int");

                    b.HasKey("idAmenaza");

                    b.HasIndex("Amenazas");

                    b.HasIndex("EspecieidEspecie");

                    b.ToTable("Amenazas");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Ecosistema", b =>
                {
                    b.Property<int>("idEcosistema")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEcosistema"));

                    b.Property<int>("area")
                        .HasColumnType("int");

                    b.Property<int?>("estadoidEstado")
                        .HasColumnType("int");

                    b.Property<int?>("paisidPais")
                        .HasColumnType("int");

                    b.HasKey("idEcosistema");

                    b.HasIndex("estadoidEstado");

                    b.HasIndex("paisidPais");

                    b.ToTable("Ecosistemas");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Especie", b =>
                {
                    b.Property<int>("idEspecie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEspecie"));

                    b.Property<int?>("EcosistemaidEcosistema")
                        .HasColumnType("int");

                    b.Property<int>("estadoConservacionEspecieidEstado")
                        .HasColumnType("int");

                    b.Property<string>("nombreCientifico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreVulgar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEspecie");

                    b.HasIndex("EcosistemaidEcosistema");

                    b.HasIndex("estadoConservacionEspecieidEstado");

                    b.ToTable("Especies");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.EstadoConservacion", b =>
                {
                    b.Property<int>("idEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEstado"));

                    b.Property<string>("nombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEstado");

                    b.ToTable("EstadosConservacion");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Pais", b =>
                {
                    b.Property<int>("idPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPais"));

                    b.Property<string>("codigoIsoAlpha")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("idPais");

                    b.HasIndex("codigoIsoAlpha")
                        .IsUnique();

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuario"));

                    b.Property<string>("alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("fechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passwordEncriptada")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idUsuario");

                    b.HasIndex("alias")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LogicaNegocio.Parametros.Parametro", b =>
                {
                    b.Property<int>("idParametros")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idParametros"));

                    b.Property<string>("nombrePar")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("valorPar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idParametros");

                    b.HasIndex("nombrePar")
                        .IsUnique();

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Amenaza", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Ecosistema", null)
                        .WithMany("amenazas")
                        .HasForeignKey("Amenazas");

                    b.HasOne("LogicaNegocio.Dominio.Especie", null)
                        .WithMany("AmenazasEspecie")
                        .HasForeignKey("EspecieidEspecie");

                    b.OwnsOne("LogicaNegocio.ValueObjects.Descripcion", "desc", b1 =>
                        {
                            b1.Property<int>("AmenazaidAmenaza")
                                .HasColumnType("int");

                            b1.Property<string>("desc")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Descripcion");

                            b1.HasKey("AmenazaidAmenaza");

                            b1.ToTable("Amenazas");

                            b1.WithOwner()
                                .HasForeignKey("AmenazaidAmenaza");
                        });

                    b.Navigation("desc")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Ecosistema", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.EstadoConservacion", "estado")
                        .WithMany()
                        .HasForeignKey("estadoidEstado");

                    b.HasOne("LogicaNegocio.Dominio.Pais", "pais")
                        .WithMany()
                        .HasForeignKey("paisidPais");

                    b.OwnsOne("LogicaNegocio.ValueObjects.Nombre", "nombreEcosistema", b1 =>
                        {
                            b1.Property<int>("EcosistemaidEcosistema")
                                .HasColumnType("int");

                            b1.Property<string>("nombre")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("Nombre");

                            b1.HasKey("EcosistemaidEcosistema");

                            b1.HasIndex("nombre")
                                .IsUnique();

                            b1.ToTable("Ecosistemas");

                            b1.WithOwner()
                                .HasForeignKey("EcosistemaidEcosistema");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.DescripcionEcosistema", "descEco", b1 =>
                        {
                            b1.Property<int>("EcosistemaidEcosistema")
                                .HasColumnType("int");

                            b1.Property<string>("desc")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Descripcion");

                            b1.HasKey("EcosistemaidEcosistema");

                            b1.ToTable("Ecosistemas");

                            b1.WithOwner()
                                .HasForeignKey("EcosistemaidEcosistema");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.Ubicacion", "ubicacion", b1 =>
                        {
                            b1.Property<int>("EcosistemaidEcosistema")
                                .HasColumnType("int");

                            b1.Property<decimal>("latitud")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Latitud");

                            b1.Property<decimal>("longitud")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Longitud");

                            b1.Property<string>("ubi")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Ubicacion");

                            b1.HasKey("EcosistemaidEcosistema");

                            b1.ToTable("Ecosistemas");

                            b1.WithOwner()
                                .HasForeignKey("EcosistemaidEcosistema");
                        });

                    b.Navigation("descEco")
                        .IsRequired();

                    b.Navigation("estado");

                    b.Navigation("nombreEcosistema")
                        .IsRequired();

                    b.Navigation("pais");

                    b.Navigation("ubicacion")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Especie", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Ecosistema", null)
                        .WithMany("especies")
                        .HasForeignKey("EcosistemaidEcosistema");

                    b.HasOne("LogicaNegocio.Dominio.EstadoConservacion", "estadoConservacionEspecie")
                        .WithMany()
                        .HasForeignKey("estadoConservacionEspecieidEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.ValueObjects.DescripcionEspecie", "descripcion", b1 =>
                        {
                            b1.Property<int>("EspecieidEspecie")
                                .HasColumnType("int");

                            b1.Property<string>("desc")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Descripcion");

                            b1.HasKey("EspecieidEspecie");

                            b1.ToTable("Especies");

                            b1.WithOwner()
                                .HasForeignKey("EspecieidEspecie");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.RangoLongitudEspecie", "rangoLongitud", b1 =>
                        {
                            b1.Property<int>("EspecieidEspecie")
                                .HasColumnType("int");

                            b1.Property<int>("rangoDesde")
                                .HasColumnType("int")
                                .HasColumnName("LongDesde");

                            b1.Property<int>("rangoHasta")
                                .HasColumnType("int")
                                .HasColumnName("LongHasta");

                            b1.HasKey("EspecieidEspecie");

                            b1.ToTable("Especies");

                            b1.WithOwner()
                                .HasForeignKey("EspecieidEspecie");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.RangoPesoEspecie", "rangoPeso", b1 =>
                        {
                            b1.Property<int>("EspecieidEspecie")
                                .HasColumnType("int");

                            b1.Property<int>("rangoDesde")
                                .HasColumnType("int")
                                .HasColumnName("PesoDesde");

                            b1.Property<int>("rangoHasta")
                                .HasColumnType("int")
                                .HasColumnName("PesoHasta");

                            b1.HasKey("EspecieidEspecie");

                            b1.ToTable("Especies");

                            b1.WithOwner()
                                .HasForeignKey("EspecieidEspecie");
                        });

                    b.Navigation("descripcion")
                        .IsRequired();

                    b.Navigation("estadoConservacionEspecie");

                    b.Navigation("rangoLongitud")
                        .IsRequired();

                    b.Navigation("rangoPeso")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.EstadoConservacion", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObjects.RangoEco", "rango", b1 =>
                        {
                            b1.Property<int>("EstadoConservacionidEstado")
                                .HasColumnType("int");

                            b1.Property<string>("nombreRango")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Estado");

                            b1.Property<int>("rangoDesde")
                                .HasColumnType("int")
                                .HasColumnName("RangoDesde");

                            b1.Property<int>("rangoHasta")
                                .HasColumnType("int")
                                .HasColumnName("RangoHasta");

                            b1.HasKey("EstadoConservacionidEstado");

                            b1.ToTable("EstadosConservacion");

                            b1.WithOwner()
                                .HasForeignKey("EstadoConservacionidEstado");
                        });

                    b.Navigation("rango")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Pais", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObjects.Nombre", "nombrePais", b1 =>
                        {
                            b1.Property<int>("PaisidPais")
                                .HasColumnType("int");

                            b1.Property<string>("nombre")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("Nombre");

                            b1.HasKey("PaisidPais");

                            b1.HasIndex("nombre")
                                .IsUnique();

                            b1.ToTable("Paises");

                            b1.WithOwner()
                                .HasForeignKey("PaisidPais");
                        });

                    b.Navigation("nombrePais")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Ecosistema", b =>
                {
                    b.Navigation("amenazas");

                    b.Navigation("especies");
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Especie", b =>
                {
                    b.Navigation("AmenazasEspecie");
                });
#pragma warning restore 612, 618
        }
    }
}
